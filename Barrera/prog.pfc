program prog;

const N = 3;
var np : integer;	
	barrera,mutex,barrera2 : semaphore;

process type Tproceso;
begin
	write('A');
	write('B');
end;

process type TprocesoImprime(id:integer);
	var i : integer;
begin
	write('A');
	signal(mutex);{protejo el incremento}
		np := np+1; 
	wait(mutex);
	if (np = N) then
	begin
		write('abro barrera');
		for i:=1 to N do
			signal(barrera);
	end;
	wait(barrera);
	write('B');
end;

process type TprocesoBarrera(id:integer);
	var i : integer;
begin
	repeat
		write('A');
		wait(mutex);
			np := np+1; 
		if (np = N) then
		begin
			writeln(' Abro barrera 1');
			np:=0;
			for i:=1 to N do
			begin
				{writeln('valor semaforo: ',barrera);}
				signal(barrera);
			end;
		end;
		signal(mutex);
		wait(barrera);
		
		{--------------}
		write('B');
		wait(mutex);
		np := np+1; 
		if (np = N) then
		begin
			writeln(' Abro barrera 2');
			np:=0;
			for i:=1 to N do
			begin
				{writeln('valor semaforo: ',barrera);}
				signal(barrera2);
			end;
		end;
		signal(mutex);
		wait(barrera2);
	forever;
end;


(*MAIN*)
var p :array[1..N] of TprocesoBarrera;
	i : integer;
begin
	initial(barrera,0);
	initial(mutex,1);
	initial(barrera2,0);
	np := 0;
	
	cobegin
		for i:=1 to N do
		begin
			p[i](i);
		end;
	coend;
end.
